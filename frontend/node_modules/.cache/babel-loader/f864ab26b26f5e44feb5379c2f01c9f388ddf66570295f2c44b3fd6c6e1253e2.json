{"ast":null,"code":"var _jsxFileName = \"C:\\\\NODE JS\\\\CARPOOL\\\\frontend\\\\src\\\\AllPool.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction AllPool(_ref) {\n  _s();\n  let {\n    allPool\n  } = _ref;\n  const [selectedRow, setSelectedRow] = useState(null);\n  const handleClick = row => {\n    setSelectedRow(row);\n  };\n  console.log(allPool);\n  const loggedinUser = localStorage.getItem(\"logged\");\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"These are available pools\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 7\n    }, this), allPool.map(item => /*#__PURE__*/_jsxDEV(\"div\", {\n      onClick: () => handleClick(item),\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: item.poolBy\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: item.poolFrom\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 13\n      }, this)]\n    }, item.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 11\n    }, this)), selectedRow && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: selectedRow.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: selectedRow.email\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: selectedRow.password\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: loggedinUser\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n}\n_s(AllPool, \"uNqdeC4/AX7zbEPErixrXmI9Bw8=\");\n_c = AllPool;\nexport default AllPool;\nvar _c;\n$RefreshReg$(_c, \"AllPool\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Fragment","_Fragment","AllPool","_ref","_s","allPool","selectedRow","setSelectedRow","handleClick","row","console","log","loggedinUser","localStorage","getItem","children","fileName","_jsxFileName","lineNumber","columnNumber","map","item","onClick","poolBy","poolFrom","id","name","email","password","_c","$RefreshReg$"],"sources":["C:/NODE JS/CARPOOL/frontend/src/AllPool.js"],"sourcesContent":["import React, { useState } from \"react\";\r\n\r\nfunction AllPool({allPool}) {\r\n    const [selectedRow, setSelectedRow] = useState(null);\r\n\r\n    const handleClick = (row) => {\r\n        setSelectedRow(row);\r\n      };\r\n      console.log(allPool)\r\n  const loggedinUser = localStorage.getItem(\"logged\");\r\n\r\n  return (\r\n    <>\r\n      <div>These are available pools</div>\r\n      {/* <div> */}\r\n        {allPool.map((item) => (\r\n          <div key={item.id} onClick={() => handleClick(item)}>\r\n            <p>{item.poolBy}</p>\r\n            <p>{item.poolFrom}</p>\r\n          </div>\r\n        ))}\r\n      {/* </div> */}\r\n      {selectedRow && (\r\n        <div>\r\n          <p>{selectedRow.name}</p>\r\n          <p>{selectedRow.email}</p>\r\n          <p>{selectedRow.password}</p>\r\n          <p>{loggedinUser}</p>\r\n        </div>\r\n      )}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default AllPool;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAExC,SAASC,OAAOA,CAAAC,IAAA,EAAY;EAAAC,EAAA;EAAA,IAAX;IAACC;EAAO,CAAC,GAAAF,IAAA;EACtB,MAAM,CAACG,WAAW,EAAEC,cAAc,CAAC,GAAGV,QAAQ,CAAC,IAAI,CAAC;EAEpD,MAAMW,WAAW,GAAIC,GAAG,IAAK;IACzBF,cAAc,CAACE,GAAG,CAAC;EACrB,CAAC;EACDC,OAAO,CAACC,GAAG,CAACN,OAAO,CAAC;EACxB,MAAMO,YAAY,GAAGC,YAAY,CAACC,OAAO,CAAC,QAAQ,CAAC;EAEnD,oBACEf,OAAA,CAAAE,SAAA;IAAAc,QAAA,gBACEhB,OAAA;MAAAgB,QAAA,EAAK;IAAyB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAM,EAEjCd,OAAO,CAACe,GAAG,CAAEC,IAAI,iBAChBtB,OAAA;MAAmBuB,OAAO,EAAEA,CAAA,KAAMd,WAAW,CAACa,IAAI,CAAE;MAAAN,QAAA,gBAClDhB,OAAA;QAAAgB,QAAA,EAAIM,IAAI,CAACE;MAAM;QAAAP,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAK,eACpBpB,OAAA;QAAAgB,QAAA,EAAIM,IAAI,CAACG;MAAQ;QAAAR,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAK;IAAA,GAFdE,IAAI,CAACI,EAAE;MAAAT,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAIlB,CAAC,EAEHb,WAAW,iBACVP,OAAA;MAAAgB,QAAA,gBACEhB,OAAA;QAAAgB,QAAA,EAAIT,WAAW,CAACoB;MAAI;QAAAV,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAK,eACzBpB,OAAA;QAAAgB,QAAA,EAAIT,WAAW,CAACqB;MAAK;QAAAX,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAK,eAC1BpB,OAAA;QAAAgB,QAAA,EAAIT,WAAW,CAACsB;MAAQ;QAAAZ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAK,eAC7BpB,OAAA;QAAAgB,QAAA,EAAIH;MAAY;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAK;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAExB;EAAA,gBACA;AAEP;AAACf,EAAA,CA9BQF,OAAO;AAAA2B,EAAA,GAAP3B,OAAO;AAgChB,eAAeA,OAAO;AAAC,IAAA2B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}